# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: jnifmuapi

on: [ workflow_dispatch, push, pull_request ]
env:
  JAVA_VERSION: 1.8
  SERVER_ID: snapshots



jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ] # ubuntu-latest, , macos-latest
        platform: [ x32, x64 ]
    #        config:
    #          - {
    #            name: "Windows Latest MinGW", artifact: "Windows-MinGW.tar.xz",
    #            os: windows-latest,
    #            build_type: "Release", cc: "mingw32-gcc.exe", cxx: "mingw32-c++.exe",
    #            generators: "Unix Makefiles"
    #          }
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Maven download
        run: mvn validate dependency:resolve-plugins -B --quiet
      #      - name: Alter path
      #        run: echo "C:\msys64\mingw32\bin" >> $GITHUB_PATH
      - name: Maven Build
        run: mvn -B package --file pom.xml -DskipTests -Pmake
      - name: artifact
        uses: actions/upload-artifact@v2
        with:
          name: lib
          path: |
            jnifmuapi/target/classes/lib/**/libfmuapi.so
            jnifmuapi/target/classes/lib/**/libfmuapi.dylib
            jnifmuapi/target/classes/lib/**/fmuapi.dll
          retention-days: 1

  pack:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: jnifmuapi/target/classes
      - name: find libs
        run: find . -name "*.so"
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Maven download
        run: mvn validate dependency:resolve-plugins -B --quiet
      - name: Maven Build Final
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: upload jnifmuapi
        uses: actions/upload-artifact@v2
        with:
          name: jnifmuapi
          path: |
            jnifmuapi/target/jnifmuapi-*-SNAPSHOT.jar
            fmi2/target/fmi2-*-SNAPSHOT.jar
          retention-days: 5

