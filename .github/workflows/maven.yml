# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: jnifmuapi

on: [workflow_dispatch, push, pull_request]
env:
  JAVA_VERSION: 1.8
  SERVER_ID: snapshots



jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]#, windows-latest, macos-latest]
#        platform: [x32, x64]
    steps:
      - uses: actions/checkout@v2
        with: 
          submodules: 'true'
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Maven download
        run: mvn validate dependency:resolve-plugins -B --quiet  #dependency:resolve dependency:resolve-plugins -B --quiet -DexcludeGroupIds=org.intocps.fmi -DincludeParents=true
      - name: grep
        run: grep -r "nGetJniApiVersion" .
      - name: Maven Build
        run: mvn -B package --file pom.xml -DskipTests -Pmake
      - name: find
        run: find . -name "*.so"
      - name: artifact
        uses: actions/upload-artifact@v2
        with:
          name: nativelib
          path: jnifmuapi/target/classes/lib/Linux-x86_64/libfmuapi.so
      - name: Maven Test
        run: mvn test
